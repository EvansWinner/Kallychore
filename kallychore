#!/usr/bin/env bash

kallyc_version=1

## Defaults
cellstartstr=".--- Code cell start ----------"
cellendstr="\`------------------------------"
cellprefix=":  "

function kallyc_help() {
    echo "Usage:"
    echo "    kallychore [opts] FILE [FILE...]  Process FILE(s) with Kallychore."
    echo "    kallychore -h                     Display this help text."
    echo "    kallychore -v                     Display Kallychore version."
    echo ""
    echo "Options must come before any files:"
    echo " -a \"STRING\"    Insert line with STRING before code in a code cell."
    echo "                Default is for use with plain text."
    echo " -b \"STRING\"    Prefix line with STRING before each line of code in a code cell."       
    echo "                Default is for use with plain text."
    echo " -c \"STRING\"    Insert line with STRING after code in a code cell."
    echo " -m             Set -a, -b, and -c for postprocessing with Markdown."
}

if [ "$1" = "" ]; then
    kallyc_help && exit
fi

while getopts vhma:b:c: opt; do
    case ${opt} in
	a)
	    cellstartstr="${OPTARG}"
	    ;;
	b)
	    cellprefix="${OPTARG}"
	    ;;
	c)
	    cellendstr="${OPTARG}"
	    ;;
	m)
	    cellstartstr=""
	    cellendstr=""
	    cellprefix="     "
	    ;;
	h)
	    kallyc_help 
	    exit 0
	    ;;
	v)
	    echo "kallychore $kallyc_version" >&2
	    exit 0
	    ;;
	\?) 
	    exit 1
	    ;;
    esac
done
shift $((OPTIND-1))

## The main script where stuff really gets done. It is a Heredoc that
## gets pushed through awk.
script=$(cat <<'EOF'
BEGIN {
    textstartstr = "cat <<'kallychoreistehbombzers'"   # heredoc start
    textendstr = "kallychoreistehbombzers" 	       # heredoc end
    code = 0;
    text = 0;
    print "function spaces {"
    print " sed 's/^/    /g'"
    print "}"
}

/^{{{/ {
    # print any previous text
    print textstartstr;
    for (i=0;i<text;i++) {
	print a[i];
    }
    print textendstr;

    # Get ready for code block
    text = 0;
    delete a;
    
    # start the cell
    print textstartstr;
    print cellstartstr;
    code++;
}

/^}}}/ {
    # print all the code
    for (i=1;i<code;i++) {
	print cellprefix a[i];
    }
    
    print cellendstr;
    print textendstr;
    # print all the output
    for (i=1;i<code;i++) {
	print a[i];
    }
    
    code = 0;			# reset for next cell
    text = 0;
    delete a;			# clear the array
}

!/^{{{|}}}/ {
    if (code == 0) {
	a[text] = $0;
	text++;
    }
    else {
	a[code] = $0;
	code++;
    }
}

END {
    if (text != 0) {
	print textstartstr;
	if (1 in a) {
	    for (i=0;i<text;i++) {
		print a[i];
	    }
	}
	print textendstr;
    }
}
EOF
)
    
for arg; do
    cat $arg |
	awk -v cellstartstr="${cellstartstr}" \
	    -v cellendstr="${cellendstr}" -v \
	    cellprefix="${cellprefix}" "$script"  |
	bash
done

